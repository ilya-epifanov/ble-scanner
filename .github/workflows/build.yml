on: [push, pull_request]

name: Build

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - x86_64-unknown-linux-gnu
          - arm-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cross-docker/build-docker.${{ matrix.arch }}
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.arch }} --release
      - run: misc/create-archive ${{ matrix.arch }}
        if: startsWith(github.ref, 'refs/tags/')
      - uses: actions/upload-artifact@v2
        with:
          name: ble-scanner.${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/ble-scanner
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/ble-scanner.${{ matrix.arch }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ble-scanner.x86_64-unknown-linux-gnu
          path: target/artifacts/linux/amd64/ble-scanner
      - uses: actions/download-artifact@v2
        with:
          name: ble-scanner.arm-unknown-linux-gnueabihf
          path: target/artifacts/linux/arm/v6/ble-scanner
      - uses: actions/download-artifact@v2
        with:
          name: ble-scanner.aarch64-unknown-linux-gnu
          path: target/artifacts/linux/arm64/v8/ble-scanner
      - run: ls -l
      - run: ls -l target
      - run: tree
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            smartislav/ble-scanner
            ghcr.io/ilya-epifanov/ble-scanner
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
